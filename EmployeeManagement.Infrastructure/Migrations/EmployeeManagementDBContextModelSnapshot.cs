// <auto-generated />
using System;
using EmployeeManagement.Infrastructure.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeManagement.Infrastructure.Migrations
{
    [DbContext(typeof(EmployeeManagementDBContext))]
    partial class EmployeeManagementDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EmployeeManagement.Infrastructure.Models.DodeljenZadatak", b =>
                {
                    b.Property<int>("RadnoMestoId")
                        .HasColumnType("int");

                    b.Property<int>("ZadatakId")
                        .HasColumnType("int");

                    b.Property<int>("ZaposleniId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumZadavanja")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DatumZavrsetka")
                        .HasColumnType("datetime");

                    b.HasKey("RadnoMestoId", "ZadatakId", "ZaposleniId");

                    b.HasIndex("ZaposleniId");

                    b.ToTable("DodeljenZadatak", (string)null);
                });

            modelBuilder.Entity("EmployeeManagement.Infrastructure.Models.OrganizacionaCelina", b =>
                {
                    b.Property<int>("OrgCelinaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrgCelinaId"), 1L, 1);

                    b.Property<string>("NazivOC")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NazivOC");

                    b.Property<string>("OpisOC")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("OpisOC");

                    b.HasKey("OrgCelinaId");

                    b.ToTable("OrganizacionaCelina", (string)null);
                });

            modelBuilder.Entity("EmployeeManagement.Infrastructure.Models.RadnoMesto", b =>
                {
                    b.Property<int>("RadnoMestoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RadnoMestoId"), 1L, 1);

                    b.Property<string>("NazivRM")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NazivRM");

                    b.Property<string>("OpisRM")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("OpisRM");

                    b.HasKey("RadnoMestoId");

                    b.ToTable("RadnoMesto", (string)null);
                });

            modelBuilder.Entity("EmployeeManagement.Infrastructure.Models.Zadatak", b =>
                {
                    b.Property<int>("RadnoMestoId")
                        .HasColumnType("int");

                    b.Property<int>("ZadatakId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZadatakId"), 1L, 1);

                    b.Property<string>("NazivZad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OpisZad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TipZadatka")
                        .HasColumnType("int");

                    b.HasKey("RadnoMestoId", "ZadatakId");

                    b.ToTable("Zadatak", (string)null);
                });

            modelBuilder.Entity("EmployeeManagement.Infrastructure.Models.Zaposleni", b =>
                {
                    b.Property<int>("ZaposleniId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZaposleniId"), 1L, 1);

                    b.Property<DateTime>("DatumZaposlenja")
                        .HasColumnType("datetime");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("OrgCelinaId")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RadnoMestoId")
                        .HasColumnType("int");

                    b.HasKey("ZaposleniId");

                    b.HasIndex("OrgCelinaId");

                    b.HasIndex("RadnoMestoId");

                    b.ToTable("Zaposleni", (string)null);
                });

            modelBuilder.Entity("EmployeeManagement.Infrastructure.Models.DodeljenZadatak", b =>
                {
                    b.HasOne("EmployeeManagement.Infrastructure.Models.Zaposleni", "Zaposleni")
                        .WithMany("DodeljeniZadaci")
                        .HasForeignKey("ZaposleniId")
                        .IsRequired()
                        .HasConstraintName("FK_DodeljenZadatak_Zaposleni");

                    b.HasOne("EmployeeManagement.Infrastructure.Models.Zadatak", "Zadatak")
                        .WithMany("DodeljeniZadaci")
                        .HasForeignKey("RadnoMestoId", "ZadatakId")
                        .IsRequired()
                        .HasConstraintName("FK_DodeljenZadatak_Zadatak");

                    b.Navigation("Zadatak");

                    b.Navigation("Zaposleni");
                });

            modelBuilder.Entity("EmployeeManagement.Infrastructure.Models.Zadatak", b =>
                {
                    b.HasOne("EmployeeManagement.Infrastructure.Models.RadnoMesto", "RadnoMesto")
                        .WithMany("Zadaci")
                        .HasForeignKey("RadnoMestoId")
                        .IsRequired()
                        .HasConstraintName("FK_Zadatak_RadnoMesto");

                    b.Navigation("RadnoMesto");
                });

            modelBuilder.Entity("EmployeeManagement.Infrastructure.Models.Zaposleni", b =>
                {
                    b.HasOne("EmployeeManagement.Infrastructure.Models.OrganizacionaCelina", "OrgCelina")
                        .WithMany("Zaposleni")
                        .HasForeignKey("OrgCelinaId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_Zaposleni_OrganizacionaCelina");

                    b.HasOne("EmployeeManagement.Infrastructure.Models.RadnoMesto", "RadnoMesto")
                        .WithMany("Zaposleni")
                        .HasForeignKey("RadnoMestoId")
                        .IsRequired()
                        .HasConstraintName("FK_Zaposleni_RadnoMesto");

                    b.Navigation("OrgCelina");

                    b.Navigation("RadnoMesto");
                });

            modelBuilder.Entity("EmployeeManagement.Infrastructure.Models.OrganizacionaCelina", b =>
                {
                    b.Navigation("Zaposleni");
                });

            modelBuilder.Entity("EmployeeManagement.Infrastructure.Models.RadnoMesto", b =>
                {
                    b.Navigation("Zadaci");

                    b.Navigation("Zaposleni");
                });

            modelBuilder.Entity("EmployeeManagement.Infrastructure.Models.Zadatak", b =>
                {
                    b.Navigation("DodeljeniZadaci");
                });

            modelBuilder.Entity("EmployeeManagement.Infrastructure.Models.Zaposleni", b =>
                {
                    b.Navigation("DodeljeniZadaci");
                });
#pragma warning restore 612, 618
        }
    }
}
